# This file is a template, and might need editing before it works on your project.
# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/node/tags/
image: node18
stages:
  - setup
  - validate
  - test
  - build
  - upload
  - deploy
  - invalidate
  - build_prod
  - upload_prod
  - deploy_prod
  - invalidate_prod

variables:
  GIT_SSL_NO_VERIFY: 'true'
  SASS_BINARY_PATH: '/node-sass/linux-x64-64_binding.node'
  npm_config_cache: '/cache/.npm'
  LC_PIPELINE_ID: $CI_PIPELINE_ID
  PATH_VAR: /builds/aws-node


LINT:
  stage: validate
  only:
    - /^main/.*$/
    - /^task/.*$/
    - /^bug/.*$/
    - /^feature/.*$/
  script:
    - echo " "
    - echo "┌───────────────────────────────────────────┐"
    - echo "            RUNNING - LINT                   "
    - echo "└───────────────────────────────────────────┘"
    - echo " "

    - echo "Open workspace..."
    - cd /builds/aws-node
    - ls
    - echo "Done"

    - npm ci --verbose --no-optional
    - ls
    - echo "Done"

    - npm run affected:lint

UNIT:
  stage: test
  only:
    - /^task/.*$/
    - /^bug/.*$/
    - /^feature/.*$/
  coverage: '/Lines \W+: (\d+\.\d+)%.*/'
  artifacts:
    expire_in: 30 mins
    when: on_success
    paths:
      - coverage/
  script:
    - echo " "
    - echo "┌───────────────────────────────────────────┐"
    - echo "            RUNNING - UNIT TEST              "
    - echo "└───────────────────────────────────────────┘"
    - echo " "

    - path=$(pwd)
    - echo $path

    - echo "Open workspace..."
    - cd "$path"
    - ls
    - echo "Done"

    - npm ci
    - ls
    - echo "Done"

    - npm run affected:test

SIT_SNAPSHOT:
  stage: build
  except:
    - schedules
  only:
    refs:
      - master
  allow_failure: false
  artifacts:
    expire_in: 4 hrs 20 min
    paths:
      - dist
  script:
    - pwd

    - echo "Print Pipeline Number..."
    - echo $CI_PIPELINE_ID

    - htmlBody1="<pre style=\"font-size:3rem\">"
    - htmlBody1+="<br /><strong style=\"color:blue\">Last git commit sha:</strong> $CI_COMMIT_SHA"
    - htmlBody1+="<br /><strong style=\"color:green\">Github pipeline number:</strong> $CI_PIPELINE_ID"
    - htmlBody1+="<br /><strong style=\"color:blueviolet\">tag-version:</strong> $CI_COMMIT_TAG"
    - htmlBody1+="<br /></pre>"
    - echo $htmlBody1

    - echo "Open workspace..."
    - cd /builds/aws-node
    - ls
    - echo "Done"

    - npm ci --verbose --ignore-scripts
    - ls
    - echo "Done"

    - echo "Build SIT Distributable"
    - npm run build:sit

    - echo "Create version.html"
    - cd dist
    - echo $htmlBody1 > version.html

SIT_MFE_SNAPSHOT:
  stage: build
  except:
    - schedules
  only:
    refs:
      - master
  allow_failure: false
  artifacts:
    expire_in: 4 hrs 20 min
    paths:
      - dist
  script:
    - pwd

    - echo "Print Pipeline Number..."
    - echo $CI_PIPELINE_ID

    - htmlBody1="<pre style=\"font-size:3rem\">"
    - htmlBody1+="<br /><strong style=\"color:blue\">Last git commit sha:</strong> $CI_COMMIT_SHA"
    - htmlBody1+="<br /><strong style=\"color:green\">Github pipeline number:</strong> $CI_PIPELINE_ID"
    - htmlBody1+="<br /><strong style=\"color:blueviolet\">tag-version:</strong> $CI_COMMIT_TAG"
    - htmlBody1+="<br /></pre>"
    - echo $htmlBody1

    - echo "Open workspace..."
    - cd /builds/aws-node
    - ls
    - echo "Done"

    - npm ci --verbose --ignore-scripts
    - ls
    - echo "Done"

    - echo "Build SIT Distributable"
    - npm run build:sit:mfe

    - echo "Create version.html"
    - cd dist
    - echo $htmlBody1 > version.html

UPLOAD_SIT:
  stage: upload
  image: node18
  except:
    - schedules
  only:
    refs:
      - master
  dependencies:
    - SIT_SNAPSHOT
  when: on_success
  allow_failure: false
  script:
    - echo " "
    - echo "┌───────────────────────────────────────────┐"
    - echo "            UPLOAD - SIT                    "
    - echo "└───────────────────────────────────────────┘"
    - echo " "

    - ls
    - echo $CI_PIPELINE_ID

    - if [ -z "$CI_PIPELINE_ID" ]; then
    - echo "Required asset artifact not found in pipeline:${LC_PIPELINE_ID}..."
    - exit 1
    - fi
    - 
DEPLOY_TEST:
  stage: deploy
  image: node18
  environment:
    name: SIT
  when: on_success
  only:
    refs:
      - main
  allow_failure: false
  dependencies:
    - SIT_SNAPSHOT
  script:
    - echo " "
    - echo "┌───────────────────────────────────────────┐"
    - echo "         DEPLOY - SIT                        "
    - echo "└───────────────────────────────────────────┘"
    - echo " "

    - echo $CI_PIPELINE_ID

    - echo "Upload to aws"

DEPLOY_INT:
  stage: deploy
  image: node18
  environment:
    name: INT_DEPLOY
  when: on_success
  only:
    refs:
      - master
  allow_failure: false
  dependencies:
    - INT_SNAPSHOT
  script:
    - echo " "
    - echo "┌───────────────────────────────────────────┐"
    - echo "         DEPLOY - INT                   "
    - echo "└───────────────────────────────────────────┘"
    - echo " "
    - echo $CI_PIPELINE_ID
    - echo "Upload to plugins"
  

PROD_SNAPSHOT:
  stage: build_prod
  environment:
    name: PROD
  only:
    refs:
      - master
  when: manual
  allow_failure: false
  artifacts:
    expire_in: 72 hrs
    paths:
      - dist
  script:
    - pwd

    - echo "Print Pipeline Number..."
    - echo $CI_PIPELINE_ID

    - echo "Create version.html"
    - htmlBody1="<pre style=\"font-size:3rem\">"
    - htmlBody1+="<br /><strong style=\"color:blue\">Last git commit sha:</strong> $CI_COMMIT_SHA"
    - htmlBody1+="<br /><strong style=\"color:green\">Github pipeline number:</strong> $CI_PIPELINE_ID"
    - htmlBody1+="<br /><strong style=\"color:blueviolet\">tag-version:</strong> $CI_COMMIT_TAG"
    - htmlBody1+="<br /></pre>"
    - echo $htmlBody1

    - echo "Open workspace..."
    - cd /builds
    - ls
    - echo "Done"

    - npm ci --verbose --ignore-scripts
    - ls
    - echo "Done"

    - echo "Build PROD Distributable"
    - npm run build:prod

    - echo "Create version.html"
    - cd dist
    - echo $htmlBody1 > version.html

UPLOAD_PROD:
  stage: upload_prod
  image: latest
  environment:
    name: PROD
  except:
    - schedules
  only:
    refs:
      - master
  dependencies:
    - PROD_SNAPSHOT
  when: manual
  allow_failure: false
  script:
    - echo " "
    - echo "┌───────────────────────────────────────────┐"
    - echo "         UPLOAD - PRODUCTION                 "
    - echo "└───────────────────────────────────────────┘"
    - echo " "

    - ls
    - echo $CI_PIPELINE_ID

    - if [ -z "$CI_PIPELINE_ID" ]; then
    - echo "Required asset artifact not found in pipeline:${CI_PIPELINE_ID}..."
    - exit 1
    - fi

    - echo "Packaging artifact"
    - tar ./dist
    - echo "Pushing"
    - version="1.0.0-${CI_PIPELINE_ID}"
    - ls
    - echo ${version}
    - mvn deploy:deploy-file 



